name: Automated Testing

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Set up Conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        environment-file: ci/environment.yml

    - name: Create Conda Environment
      run: conda env create -f ci/environment.yml
      shell: bash

    - name: Initialize Conda
      run: conda init bash
      shell: bash

    - name: Activate Conda Environment
      run: |
        source $HOME/.bashrc
        conda activate roms-ci
        echo "The Conda prefix is ${CONDA_PREFIX}"
        conda info	

    - name: Set Environment Variables
      run: |
        source $HOME/.bashrc
        conda activate roms-ci
        ROMS_ROOT=$(pwd)
        NETCDFHOME=${CONDA_PREFIX}
        LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$NETCDFHOME/lib"
        PATH="./:$PATH"
        PATH=$PATH:$ROMS_ROOT/Tools-Roms
        # Now copy these variables to GITHUB_ENV to source in future steps
        echo "ROMS_ROOT=$(pwd)" >> $GITHUB_ENV
        echo "MPIHOME=${CONDA_PREFIX}" >> $GITHUB_ENV
        echo "NETCDFHOME=${CONDA_PREFIX}" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$NETCDFHOME/lib"" >> $GITHUB_ENV
        echo "PATH="./:$PATH"" >> $GITHUB_ENV
        echo "PATH=$PATH:$ROMS_ROOT/Tools-Roms" >> $GITHUB_ENV
        echo "the github env variable is $GITHUB_ENV with contents"
        cat $GITHUB_ENV
        echo "also the cpp path is"
        which cpp
      shell: bash
      
    - name: Compile Fortran Code
      run: |
        source $HOME/.bashrc
        source $GITHUB_ENV
        conda activate roms-ci
        #Copy GNU-compatible makefiles
        rsync -av ${ROMS_ROOT}/ci/ci_makefiles/ ${ROMS_ROOT}
        cd Work/
        make nhmg
        cd ${ROMS_ROOT}/Tools-Roms/
        make
      shell: bash
    - name: Compile MARBL
      run: |
        source $HOME/.bashrc
        source $GITHUB_ENV
        conda activate roms-ci
        git clone https://github.com/marbl-ecosys/MARBL.git ~/MARBL
        cd ~/MARBL
        git checkout marbl0.45.0
        cd src
        make gnu USEMPI=TRUE
        cd ~/MARBL
        MARBL_ROOT=$(pwd)
        echo "MARBL_ROOT=$(pwd)" >> $GITHUB_ENV
        
      shell: bash      
    - name: Get input data
      run: |
        cp ${ROMS_ROOT}/ci/get_input_files.sh ${ROMS_ROOT}/Examples/input_data/
        cd ${ROMS_ROOT}/Examples/input_data/
        ./get_input_files.sh
      shell: bash
    - name: Run Tests
      #run: bash Examples/code_check/do_test_all.sh
      shell: bash
      run: |
        source $HOME/.bashrc
        source $GITHUB_ENV
        conda activate roms-ci            	      
        cd ${ROMS_ROOT}/Examples/code_check/
        ./do_test_all.sh github
    - name: Print logs (in case of failure)
      if: failure()
      shell: bash
      run: |
        source $HOME/.bashrc
        source $GITHUB_ENV
        echo "--------------------------------------------------------------------------------"
        echo "This step will print the test_old.log files from each case run by"
        echo "Examples/code_check/do_test_all.sh"
        echo "If the tests failed but you are confident in your changes,"
        echo "overwrite the benchmark.result_github files for each case with"
        echo "the contents of these log files"
        echo "--------------------------------------------------------------------------------"
        cd ci
        ./print_output_logs.sh
