
      ! ****************************************************************
      ! user inputs
      logical,parameter,public :: cdr_source  = .false.  ! default. Should be false if not using CDR forcing
      logical,parameter,public :: cdr_volume  = .false.  ! If false, use tracer flux only
                                                         ! If true, use volume flux and tracer concentrations

      logical,parameter :: cdr_analytical  = .false.     ! If true, cdr release specified in ana_cdf_frc.h

      integer,parameter,public :: ncdr=1   !! number of discrete CDR releases

      ! netcdf forcing file nad variable names

      character(len=60) :: cdr_file = 'cdr_release.nc'

      ! Use either volume flux [m3/s] and tracer concentrations [mmol/m3], or use tracer flux [mmol/s]
      type (ncforce) :: nc_cdrvol = ncforce( vname='cdr_volume', tname='cdr_time')
      type (ncforce) :: nc_cdrtrc = ncforce( vname='cdr_tracer', tname='cdr_time') 

      type (ncforce) :: nc_cdrflx = ncforce( vname='cdr_trcflx', tname='cdr_time') 

      character(len=9)  :: cdr_loc_lon = 'cdr_lon'  !!  longitude of CDR release [degrees East]
      character(len=9)  :: cdr_loc_lat = 'cdr_lat'  !!  latitude of CDR release  [degrees North]
      character(len=9)  :: cdr_loc_dep = 'cdr_dep'  !!  depth of CDR release [m]
      character(len=9)  :: cdr_scl_hor = 'cdr_hsc'  !!  horizontal scale of CDR release [m]
      character(len=9)  :: cdr_scl_vrt = 'cdr_vsc'  !!  vertical scale of CDR release [m]

      ! end user inputs
      ! ****************************************************************

      ! Future work, instead of all tracers, only provide 1, and specify which one by name
      ! character(7),parameter :: cdr_varname = 'salt'     ! this determines which tracer is released
