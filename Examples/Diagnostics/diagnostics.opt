      
      ! ***************************************************************
      ! User inputs:
      !
      !   Momentum terms:
      !     Pressure gradient; coriolis; adv.; dissipation from adv.; h. mix.; and v. mix.
      !
      !   Tracer terms:
      !     H. adv.; dissipation from h. adv.; v. adv.; dissipation from v. adv.; h. mix.; and v. mix.
      !
      !   Budget closing check:
      !     when using for a new simulation (especially with different cppflags), make 
      !     sure to do a very short simulation (i.e. 10 steps) with check_diag (and 
      !     check_avg if using averages) as .true. to ensure budget is closing correctly, 
      !     e.g. u_budget -> 0! 
      !     Then set check_diag and check_avg to .false. for your production run as
      !     they are a waste of resources.
      !
      !   Notes:
      !     1) need DIAGNOSTICS flag in cppdefs.h
      !     2) units are du/dt*dz - m^2/s^2 (or v/w/tracer) - i.e. vertically integrated in cell
      !     3) if tracer diagnostics required set diag_trc==T, 
      !        select which tracers you want in wrt_t_diag array in tracers.opt
      !     4) for an example try Examples/Diagnostics/
      !     5) averaging frequency = rec_rate * time_step
      !        averaging is expensive and will likely slow your simulation by 30-40%
      !        with u, v, temp and salinity diagnostics.
      !     6) history (snap-shot) diagnostics is relatively inexpensive.
      
      logical, parameter         :: diag_avg      = .true.  ! compute history (=F) or averages (=T)
      integer, parameter         :: rec_rate      = 2       ! output record rate
      integer, parameter         :: recs_per_file = 20      ! total recs per file

      logical, parameter, public :: diag_uv       = .true.  ! calc+write diags of u/v.
      logical, parameter, public :: diag_trc      = .true.  ! calc+write diags of selected tracers
      logical, parameter         :: tot_change    = .true.  ! write total rate of change in variable during timestep.
                                                            ! may not want tot_change (wasteful), just the sum of diags.
      integer, parameter         :: prcsn         = 1       ! precision of output variables. 1=float, 2=double
      
      ! End of user inputs                                  
      ! ***************************************************************

      ! Developer inputs - for budget close checks:

      logical, parameter         :: check_diag    = .true.  ! check sum of diag terms = change in u/v/t per timestep.
      logical, parameter         :: check_avg     = .true.  ! check sum of diagnostic avg*time = gross change
                                                            ! in u/v/t over entire simulation at time of writing.
                                                            ! both Useful to ensure diagnostics not broken by different cppdefs.h config.
            